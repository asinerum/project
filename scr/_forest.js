var forestjs=function(){var t=function(t){};t.prototype={train:function(t,e,n){n=n||{},this.numTrees=n.numTrees||100,this.trees=new Array(this.numTrees);for(var a=0;a<this.numTrees;a++)this.trees[a]=new r,this.trees[a].train(t,e,n)},predictOne:function(t){for(var r=0,e=0;e<this.numTrees;e++)r+=this.trees[e].predictOne(t);return r/=this.numTrees},predict:function(t){for(var r=new Array(t.length),e=0;e<t.length;e++)r[e]=this.predictOne(t[e]);return r}};var r=function(t){};function e(t,r,e,n){for(var a=(n=n||{}).numTries||10,o=s(0,t[0].length),i=e.length,l=h(r,e),f=0,u=0,g=0;g<a;g++){for(var v=e[s(0,i)],m=e[s(0,i)];m==v;)m=e[s(0,i)];for(var d=Math.random(),c=t[v][o]*d+t[m][o]*(1-d),M=1,p=1,w=1,y=1,T=0;T<e.length;T++)t[e[T]][o]<c?1==r[e[T]]?M++:w++:1==r[e[T]]?p++:y++;var A=M+w;M/=A,w/=A,p/=A=p+y,y/=A;var F=l-(-M*Math.log(M)-w*Math.log(w))-(-p*Math.log(p)-y*Math.log(y));(F>f||0===g)&&(f=F,u=c)}return model={},model.thr=u,model.ri=o,model}function n(t,r){return r?t[r.ri]<r.thr?1:-1:1}function a(t,r,e,n){var a=(n=n||{}).numTries||10,o=e.length,l=0,f=1;if(t[0].length>2)for(l=s(0,t[0].length),f=s(0,t[0].length);f==l;)f=s(0,t[0].length);for(var u,g,v,m=h(r,e),d=0,c=new Array(e.length),M=0;M<a;M++){for(var p=i(0,2*Math.PI),w=Math.cos(p),y=Math.sin(p),T=0;T<e.length;T++)c[T]=w*t[e[T]][l]+y*t[e[T]][f];for(var A=e[s(0,o)],F=e[s(0,o)];F==A;)F=e[s(0,o)];var D=Math.random(),O=c[A]*D+c[F]*(1-D),q=1,x=1,P=1,N=1;for(T=0;T<e.length;T++)c[T]<O?1==r[e[T]]?q++:P++:1==r[e[T]]?x++:N++;var j=q+P;q/=j,P/=j,x/=j=x+N,N/=j;var I=m-(-q*Math.log(q)-P*Math.log(P))-(-x*Math.log(x)-N*Math.log(N));(I>d||0===M)&&(d=I,u=w,g=y,v=O)}return model={},model.w1=u,model.w2=g,model.dotthr=v,model}function o(t,r){return r?t[0]*r.w1+t[1]*r.w2<r.dotthr?1:-1:1}function h(t,r){for(var e=r.length,n=0,a=0;a<e;a++)1==t[r[a]]&&(n+=1);return n=(1+n)/(e+2),q=(1+e-n)/(e+2),-n*Math.log(n)-q*Math.log(q)}function i(t,r){return Math.random()*(r-t)+t}function s(t,r){return Math.floor(Math.random()*(r-t)+t)}r.prototype={train:function(t,r,h){var i=(h=h||{}).maxDepth||4,s=h.type||0,l=a,f=o;h.trainFun&&(l=h.trainFun),h.testFun&&(f=h.testFun),0==s&&(l=e,f=n),1==s&&(l=a,f=o);for(var u=Math.pow(2,i)-1,g=Math.pow(2,i+1)-1,v=new Array(g),m=1;m<v.length;m++)v[m]=[];v[0]=new Array(r.length);for(m=0;m<r.length;m++)v[0][m]=m;for(var d=new Array(u),c=0;c<u;c++){var M=v[c];if(0!=M.length)if(1!=M.length){var p=l(t,r,M);d[c]=p;var w=[],y=[];for(m=0;m<M.length;m++){1===f(t[M[m]],p)?w.push(M[m]):y.push(M[m])}v[2*c+1]=w,v[2*c+2]=y}else v[2*c+1]=[M[0]]}var T=new Array(g),A=new Array(g);for(c=u;c<g;c++){var F=0;for(m=0;m<v[c].length;m++)1===r[v[c][m]]&&(F+=1);T[c]=F,A[c]=v[c].length-F}this.models=d,this.leafPositives=T,this.leafNegatives=A,this.maxDepth=i,this.trainFun=l,this.testFun=f},predictOne:function(t){for(var r=0,e=0;e<this.maxDepth;e++){r=1===this.testFun(t,this.models[r])?2*r+1:2*r+2}return(this.leafPositives[r]+.5)/(this.leafNegatives[r]+1)}};var l={};return l.DecisionTree=r,l.RandomForest=t,l}();